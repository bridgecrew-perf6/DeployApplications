variables:
  KUBE_CONTEXT: "gcp-solutions/hcls/claims-modernization/pa-ref-impl/gke-deploy-env:gitlab-agent"
  CLUSTER: development
  REGION: us-central1

stages:
  - deploy

image: google/cloud-sdk

.cluster_connect: &cluster_connect
#TODO ADD checking ENIRONMENT variable exists and connect to cluster depending on it
- gcloud container clusters get-credentials "$CLUSTER" --region="$REGION" --project "$PROJECT_ID"
- kubectl config current-context
#- kubectl config use-context $KUBE_CONTEXT
- kubectl get namespace "$NAMESPACE" 2>/dev/null || kubectl create namespace "$NAMESPACE"
- kubectl config set-context --current --namespace=$NAMESPACE
- kubectl config current-context
- gcloud --quiet container clusters get-credentials $CLUSTER --region $REGION
- kubectl get pods

.cluster_patch: &cluster_patch
- kubectl apply -f $CI_PROJECT_DIR/$UPSTREAM_PROJECT_NAME/k8s/service.yaml --namespace="$KUBE_NAMESPACE"
- sed 's|__IMAGE_TAG__|'"$IMAGE"'|g;' $CI_PROJECT_DIR/$UPSTREAM_PROJECT_NAME/k8s/deployment.sample.yaml > $CI_PROJECT_DIR/$UPSTREAM_PROJECT_NAME/k8s/deployment.yaml
- kubectl apply -f $CI_PROJECT_DIR/$UPSTREAM_PROJECT_NAME/k8s/deployment.yaml --namespace="$KUBE_NAMESPACE"
- kubectl get pods


### DEMO CLUSTER

### DEVELOPMENT CLUSTER

### TEST CLUSTER


#deploy to demo:
#  stage: deploy
#  environment: demo
#  script:
#  - echo "Triggered"
#
#deploy to test:
#  stage: deploy
#  environment: test
#  script:
#  - echo "Triggered"
#
#deploy to development:
#  stage: deploy
#  environment: development
#  script:
#  - echo "Triggered"

# Pipeline was triggered - check the branch
patch:
  stage: deploy
  environment: __ENVIRONMENT__
  script:
    - echo ENVIRONMENT = $ENVIRONMENT
    - echo IMAGE = $IMAGE
    - echo NAMESPACE = $NAMESPACE
    - echo UPSTREAM_PROJECT_NAME = $UPSTREAM_PROJECT_NAME
    - echo UPSTREAM_PROJECT_PATH = $UPSTREAM_PROJECT
    - echo Patching image $IMAGE of application $UPSTREAM_PROJECT_NAME, using $ENVIRONMENT environment and $NAMESPACE namespace
    - echo CI_COMMIT_BRANCH = $CI_COMMIT_BRANCH
    - echo CI_MERGE_REQUEST_SOURCE_BRANCH_SHA = $CI_MERGE_REQUEST_SOURCE_BRANCH_SHA
    - echo CI_PIPELINE_SOURCE = $CI_PIPELINE_SOURCE
    - echo CI_PIPELINE_TRIGGERED = $CI_PIPELINE_TRIGGERED
    - echo PIPELINE_TRIGGERED = $PIPELINE_TRIGGERED
    - *cluster_connect
    - *cluster_patch
  rules:
  - if: $PIPELINE_TRIGGERED == 'true'
    when: always

deploy:
  stage: deploy
  script:
    - *cluster_connect
#  rules:
#  - if: $PIPELINE_TRIGGERED != 'true'
#    when: always
#
#patch demo:
#  stage: deploy
#  environment: demo
#  script:
#  - echo "Triggered"
#  only:
#    variables:
#      - if $CI_PIPELINE_TRIGGERED == true
#
#patch test:
#  stage: deploy
#  environment: test
#  script:
#  - echo "Patching image $IMAGE of application $APPLICATION, source branch is  $UPSTREAM_BRANCH"

#
#patch development:
#  stage: deploy
#  environment: development
#  script:
#  - echo "Triggered"
#patch development:
#  stage: deploy
#  environment: development
#  script:
#  - echo "Triggered"